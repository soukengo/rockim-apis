syntax = "proto3";

package rockim.service.user.v1;

option go_package = "rockimserver/apis/rockim/service/user/v1;v1";

import "rockim/service/service.proto";
import "rockim/service/user/v1/types/user.proto";

import "validate/validate.proto";

// 在线状态接口
service OnlineAPI {
  // Connect 建立连接
  rpc Connect (OnlineConnectRequest) returns (OnlineConnectResponse);
  // DisConnect 断开连接
  rpc DisConnect (OnlineDisConnectRequest) returns (OnlineDisConnectResponse);
  // HeartBeat 心跳
  rpc HeartBeat (OnlineHeartBeatRequest) returns (OnlineHeartBeatResponse);
}

// OnlineConnectRequest 建立连接请求
message OnlineConnectRequest {
  // 基础参数
  rockim.service.ServiceRequest base = 1[(validate.rules).message.required = true];
  // 服务器id
  string server_id = 2[(validate.rules).string.min_len = 1];
  // 连接id
  string channel_id = 3[(validate.rules).string.min_len = 1];
  // 访问令牌
  string token = 4[(validate.rules).string.min_len = 1];
}

// OnlineConnectResponse 建立连接响应
message OnlineConnectResponse {
  string uid = 1;
}
// OnlineDisConnectRequest 断开连接请求
message OnlineDisConnectRequest {
  // 基础参数
  rockim.service.ServiceRequest base = 1[(validate.rules).message.required = true];
  // 服务器id
  string server_id = 2[(validate.rules).string.min_len = 1];
  // 连接id
  string channel_id = 3[(validate.rules).string.min_len = 1];
}

// OnlineDisConnectResponse 断开连接响应
message OnlineDisConnectResponse {

}
// OnlineHeartBeatRequest 心跳请求
message OnlineHeartBeatRequest {
  // 基础参数
  rockim.service.ServiceRequest base = 1[(validate.rules).message.required = true];
  // 服务器id
  string server_id = 2[(validate.rules).string.min_len = 1];
  // 连接id
  string channel_id = 3[(validate.rules).string.min_len = 1];
}

// OnlineHeartBeatResponse 心跳响应
message OnlineHeartBeatResponse {

}