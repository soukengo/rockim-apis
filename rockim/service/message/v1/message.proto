syntax = "proto3";

package rockim.service.message.v1;

option go_package = "rockimserver/apis/rockim/service/message/v1;v1";

import "validate/validate.proto";

import "rockim/service/service.proto";
import "rockim/service/message/v1/types/shared.proto";
import "rockim/shared/enums/message.proto";

// MessageAPI 消息相关接口
service MessageAPI {
  // Send 发送消息
  rpc Send (MessageSendRequest) returns (MessageSendResponse);
}

// MessageSendRequest 消息发送请求
message MessageSendRequest {
  // 基础参数
  rockim.service.ServiceRequest base = 1[(validate.rules).message.required = true];
  // 发送者用户ID（如果是发给某个私聊的系统消息，这里为私聊的用户ID）
  string from = 2[(validate.rules).string.min_len = 1];
  // 接收目标
  rockim.service.message.v1.types.TargetID target = 3[(validate.rules).message.required = true];
  // 是否是系统消息
  bool is_system = 4;
  // 客户端的消息ID
  string client_msg_id = 5[(validate.rules).string.min_len = 1];
  // 消息类型
  rockim.shared.enums.Message.MessageType message_type = 6[(validate.rules).enum.defined_only = true];
  // 消息内容
  bytes content = 7[(validate.rules).bytes.min_len = 1];
  // 透传数据
  map<string, string> payload = 8;
}

// MessageSendResponse 消息发送响应
message MessageSendResponse {
}