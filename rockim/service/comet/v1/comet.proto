syntax = "proto3";

package rockim.service.comet.v1;

option go_package = "rockimserver/apis/rockim/service/comet/v1;v1";

import "validate/validate.proto";
import "rockim/service/service.proto";

import "rockim/service/comet/v1/types/comet.proto";

// 长连接服务接口
service ChannelAPI {
  // Dispatch 分发数据
  rpc Dispatch (DispatchRequest) returns (DispatchResponse);
  // DispatchRoom 分发房间数据
  rpc DispatchRoom (DispatchRoomRequest) returns (DispatchRoomResponse);
}

// DispatchRequest 分发数据请求
message DispatchRequest {
  // 基础参数
  rockim.service.ServiceRequest base = 1[(validate.rules).message.required = true];
  // 连接id
  repeated string channel_ids = 2[(validate.rules).repeated.min_items = 1];
  // 推送消息
  rockim.service.comet.v1.types.PushMessage push = 3;
  // 控制消息
  rockim.service.comet.v1.types.ControlMessage control = 4;
}
// DispatchResponse 分发数据响应
message DispatchResponse {

}
// DispatchRoomRequest 分发房间数据请求
message DispatchRoomRequest {
  // 基础参数
  rockim.service.ServiceRequest base = 1[(validate.rules).message.required = true];
  // 房间
  rockim.service.comet.v1.types.Room room = 2[(validate.rules).message.required = true];
  // 推送消息
  rockim.service.comet.v1.types.PushMessage push = 3[(validate.rules).message.required = true];
}

// DispatchRoomResponse 分发房间数据响应
message DispatchRoomResponse {

}