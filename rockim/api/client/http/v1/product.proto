syntax = "proto3";

package rockim.api.client.http.v1;

option go_package = "rockimserver/apis/rockim/api/client/http/v1;v1";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "rockim/api/client/http/v1/http.proto";

// 应用接口定义
service ProductAPI {
  // FetchConfig 获取全局配置
  rpc FetchConfig (ConfigFetchRequest) returns (ConfigFetchResponse){
    option (google.api.http) = {
      post: "/client/v1/product/config/fetch",
      body: "*"
    };
  }
}

// ConfigFetchRequest 获取全局配置请求
message ConfigFetchRequest {
  // 基本参数
  rockim.api.client.http.v1.APIRequest base = 1[(validate.rules).message.required = true];
}

// Socket 长连接配置
message Socket{
  // TCP tcp 配置
  message TCP {
    // tcp host
    string address = 1;
  }
  // Websocket websocket 配置
  message Websocket {
    // websocket host
    string address = 1;
  }
  TCP tcp = 1;
  Websocket ws = 2;
}

// ConfigFetchResponse 获取全局配置响应
message ConfigFetchResponse {
  Socket socket = 1;
}
