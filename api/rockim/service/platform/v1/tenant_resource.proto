syntax = "proto3";

package rockim.service.platform.v1;

option go_package = "rockim/api/rockim/service/platform/v1;v1";

import "validate/validate.proto";
import "rockim/service/platform/v1/types/tenant.proto";
import "rockim/shared/enums/v1/tenant.proto";

// 平台资源接口
service TenantResourceAPI {
  // 创建资源
  rpc Create (TenantResourceCreateRequest) returns (TenantResourceCreateResponse);
  // 修改资源
  rpc Update (TenantResourceUpdateRequest) returns (TenantResourceUpdateResponse);
  // 删除资源
  rpc Delete (TenantResourceDeleteRequest) returns (TenantResourceDeleteResponse);
  // 获取平台资源列表
  rpc List (TenantResourceListRequest) returns (TenantResourceListResponse);
  // 获取平台资源列表 (指定id列表)
  rpc ListByIds (TenantResourceListByIdsRequest) returns (TenantResourceListByIdsResponse);
}

message TenantResourceOptions {
  rockim.shared.enums.v1.TenantResourceCategory category = 1;
  // 菜单名称
  string name = 2;
  // 上级ID
  string parent_id = 3;
  // URL
  string url = 4;
  // ICON
  string icon = 5;
  // 排序号
  int32 order = 6;
}
message TenantResourceCreateRequest {
  TenantResourceOptions options = 1[(validate.rules).message.required = true];
}
message TenantResourceCreateResponse {
}
message TenantResourceUpdateRequest {
  string id = 1;
  TenantResourceOptions options = 2[(validate.rules).message.required = true];
}
message TenantResourceUpdateResponse {
}
message TenantResourceDeleteRequest {
  string id = 1;
}
message TenantResourceDeleteResponse {
}


message TenantResourceListRequest {
}

message TenantResourceListResponse {
  repeated rockim.service.platform.v1.types.TenantResource list = 1;
}

message TenantResourceListByIdsRequest {
  repeated string ids = 1[(validate.rules).repeated.min_items = 1];
}

message TenantResourceListByIdsResponse {
  repeated rockim.service.platform.v1.types.TenantResource list = 1;
}
