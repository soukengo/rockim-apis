syntax = "proto3";

package rockim.service.platform.v1;

option go_package = "rockim/api/rockim/service/platform/v1;v1";

import "validate/validate.proto";
import "rockim/service/platform/v1/types/platform.proto";
import "rockim/shared/enums/v1/platform.proto";

// 平台资源接口
service PlatResourceAPI {
  // 创建资源
  rpc Create (PlatResourceCreateRequest) returns (PlatResourceCreateResponse);
  // 修改资源
  rpc Update (PlatResourceUpdateRequest) returns (PlatResourceUpdateResponse);
  // 删除资源
  rpc Delete (PlatResourceDeleteRequest) returns (PlatResourceDeleteResponse);
  // 获取平台资源列表
  rpc List (PlatResourceListRequest) returns (PlatResourceListResponse);
  // 获取平台资源列表 (指定id列表)
  rpc ListByIds (PlatResourceListByIdsRequest) returns (PlatResourceListByIdsResponse);
}

message PlatResourceOptions {
  rockim.shared.enums.v1.PlatResourceCategory category = 1;
  // 菜单名称
  string name = 2;
  // 上级ID
  string parent_id = 3;
  // URL
  string url = 4;
  // ICON
  string icon = 5;
  // 排序号
  int32 order = 6;
}
message PlatResourceCreateRequest {
  PlatResourceOptions options = 1[(validate.rules).message.required = true];
}
message PlatResourceCreateResponse {
}
message PlatResourceUpdateRequest {
  string id = 1;
  PlatResourceOptions options = 2[(validate.rules).message.required = true];
}
message PlatResourceUpdateResponse {
}
message PlatResourceDeleteRequest {
  string id = 1;
}
message PlatResourceDeleteResponse {
}


message PlatResourceListRequest {
}

message PlatResourceListResponse {
  repeated rockim.service.platform.v1.types.PlatResource list = 1;
}

message PlatResourceListByIdsRequest {
  repeated string ids = 1[(validate.rules).repeated.min_items = 1];
}

message PlatResourceListByIdsResponse {
  repeated rockim.service.platform.v1.types.PlatResource list = 1;
}
